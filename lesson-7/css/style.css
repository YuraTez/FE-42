@import "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css";

*{
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  list-style-type: none;
}

.wrapper{
  max-width: 1200px;
  margin: 0 auto;
  padding: 25px 0;
}

.block-img{
  position: relative;
  padding-left: 60px;
  background: coral;
}

.block-img:before{
  position: absolute;
  left: 0;
  top: 0;
  content: url("../assets/img/facebook_icon.svg");
  fill: pink;
  width: 50px;
  height: 50px;
}

.svg-img{
  fill: none;
  stroke: silver;
  stroke-width: 3;
  transition: 0.7s;
}

.svg-img:hover{
  fill: orange;
  stroke: red;
  cursor: pointer;
}

.list-img{
  display: flex;
}

.list-img__item:not(:last-child){
  margin-right: 30px;
}


.fa-telegram{
  cursor: pointer;
  color: coral;
}

.fa-telegram:hover{
  cursor: pointer;
  color: silver;
}

.shadow{
  position: relative;
  width: 200px;
  height: 300px;
  border: 1px solid silver;
  background: white;
/*  box-shadow: 10px 10px 0 0 rgba(1,1,1, 0.5);*/
  box-shadow: 0px 0px 5px 6px rgba(1 1 1 / 50%);
  box-shadow: inset 0px 0px 5px 6px rgb(1 1 1 / 50%),
  0px 0px 5px 6px rgba(1 1 1 / 50%);
}
/*

.shadow:before{
  position: absolute;
  top: -20%;
  content: "";
  width: 200px;
  height: 200px;
  border-radius: 50%;
  box-shadow: 0px 0px 5px 6px rgba(1 1 1 / 50%);
  z-index: -1;
}*/


.shadow img{
  width: 100%;
  height: 100%;
  /*object-fit: contain;*/
  object-fit: cover;
}

.transform-translate h2{
  position: relative;
  text-align: center;
  text-transform: uppercase;
  padding-bottom: 50px;
}

.transform-translate h2:before{
  position: absolute;
  content: "";
  width: 170px;
  height: 1px;
  background: red;
  bottom: 0;
  left: 50%;
  top: 50%;
  transform: translate(-50%);
}

.transform-scale img{
  transition: 0.3s;
}

.transform-scale img:hover{
  /*transform: scale(1);*/
  transform: scale(0.8);
  cursor: pointer;
}

.transform-rotate .fa-arrow-up{
  transition: 0.3s;
  transform: rotate(180deg);
}

.transform-rotate.active .fa-arrow-up {
  transform: rotate(0);
  cursor: pointer;
}